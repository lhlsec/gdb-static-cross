# This software is released under the terms of GPLv2 by copyright@mzpqnxow.com
# Please see LICENSE or LICENSE.md for more information on GPLv2
#
# This version of the script is meant for use with OpenWRT Toolchains
# To use it, you would do something like this:
#
# $ wget https://downloads.openwrt.org/releases/18.06.2/targets/ar71xx/generic/openwrt-sdk-18.06.2-ar71xx-generic_gcc-7.3.0_musl.Linux-x86_64.tar.xz
# $ tar -xvf openwrt-sdk-18.06.2-ar71xx-generic_gcc-7.3.0_musl.Linux-x86_64.tar.xz
# $ cp -r openwrt-sdk-18.06.2-ar71xx-generic_gcc-7.3.0_musl.Linux-x86_64/staging_dir /toolchains/my-ar71xx-toolchain
# $ cp activate-openwrt-toolchain.env /toolchains/my-ar71xx-toolchain/toolchain-*/
# $ source /toolchains/my-ar71xx-toolchain/toolchain-*/activate-openwrt-toolchain.env
# ...
# $ gcc -v
#
# You should be all set at this point
#

sourced_file_path() {
  if [ -n "${BASH_SOURCE}" ]; then
    cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd
  elif [ -n "${ZSH_VERSION}" ]; then
    cd "$(dirname ${(%):-%x})" && pwd
  else
    return
  fi
  unset -f sourced_file_path
}

deactivate () {
  unset UTIL_STATIC
  unset C_STATIC
  unset DL_STATIC
  unset PTHREAD_STATIC
  unset STDCXX_STATIC
  unset GCCEH_STATIC
  unset TOOLCHAIN_TARGET
  unset TOOLCHAIN_ROOT
  unset TOOLCHAIN_BIN

  unalias cross_configure

  # reset old environment variables
  # ! [ -z ${VAR+_} ] returns true if VAR is declared at all
  if ! [ -z "${_OLD_PATH+_}" ] ; then
    PATH="$_OLD_PATH"
    export PATH
    unset _OLD_PATH
  fi

  if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ] ; then
    hash -r 2>&1 >/dev/null
  fi

  if ! [ -z "${_OLD_PS1+_}" ] ; then
    PS1="$_OLD_PS1"
    export PS1
    unset _OLD_PS1
  fi
  unset -f deactivate
}

set_and_save() {
  _OLD_PATH="${PATH}"
  PATH="${TOOLCHAIN_BIN}":"${PATH}"
  _OLD_PS1="${PS1}"
  PS1="(${TOOLCHAIN_TARGET} SDK) ${PS1}"
  alias cross_configure="./configure\
  --host=${TOOLCHAIN_TARGET}\
  --prefix=${TOOLCHAIN_ROOT}\
  CXXFLAGS=\"-fPIC -static -static-libstdc++ -static-libgcc\""
  export C_STATIC
  export DL_STATIC
  export GCCEH_STATIC
  export PATH
  export PS1
  export PTHREAD_STATIC
  export STDCXX_STATIC
  export TOOLCHAIN_BIN
  export TOOLCHAIN_ROOT
  export TOOLCHAIN_TARGET
  export UTIL_STATIC
  unset -f set_and_save
}

show_user() {
  echo "TOOLCHAIN_TARGET: ${TOOLCHAIN_TARGET}"
  echo "TOOLCHAIN_ROOT: ${TOOLCHAIN_ROOT}"
  echo "TOOLCHAIN_BIN:  ${TOOLCHAIN_BIN}"
  echo
  echo "GCC location: $(which gcc)"
  echo "GAS location: $(which as)"
  echo "GLD location: $(which ld)"
  echo "G++ location: $(which g++)"
  echo "CC location:  $(which cc)"
  echo
  echo "UTIL_STATIC:      ${UTIL_STATIC}"
  echo "C_STATIC:         ${C_STATIC}"
  echo "DL_STATIC:        ${DL_STATIC}"
  echo "PTHREAD_STATIC:   ${PTHREAD_STATIC}"
  echo "STDCXX_STATIC:    ${STDCXX_STATIC}"
  echo "GCCEH_STATIC:     ${GCCEH_STATIC}"
  echo
  echo
  echo "Try using cross_configure, which is a shell alias now:"
  echo -n "  "
  alias cross_configure
  echo
  echo 'Use "deactivate" in your shell to restore your $PATH and $PS1 at any time'
  echo
  unset -f show_user
}

symlinks() {
  echo "--- Build environment setup ---"
  echo
  echo "TOOLCHAIN_TARGET: $TOOLCHAIN_TARGET"
  echo "TOOLCHAIN_BIN: $TOOLCHAIN_BIN"
  echo
  for TOOL in gcc \
    addr2line \
    ar \
    as \
    c++ \
    cpp \
    g++ \
    ld \
    nm \
    objdump \
    ranlib \
    strip
  do
    echo "  Symlinking $TOOL"
    ln -sf "$TOOLCHAIN_BIN/$TOOLCHAIN_TARGET-$TOOL" "$TOOLCHAIN_BIN/$TOOL"
  done
  ln -sf "${TOOLCHAIN_BIN}/${TOOLCHAIN_TARGET}-gcc" "${TOOLCHAIN_BIN}/cc"
  echo
  unset -f symlinks
}

CURDIR="$(sourced_file_path)"
# OpenWRT sets some values here for us unintentionally
source "$CURDIR/info.mk"
TOOLCHAIN_TARGET="$TARGET_CROSS"
unset TARGET_CROSS
TOOLCHAIN_ROOT="$CURDIR"

# Commonly used/needed static libraries, put them in the
# environment for easy access
C_STATIC="$(find $(realpath $CURDIR) -name libc.a)"
DL_STATIC="$(find $(realpath $CURDIR) -name libdl.a)"
GCCEH_STATIC="$(find $(realpath $CURDIR) -name libgcc_eh.a)"
PTHREAD_STATIC="$(find $(realpath $CURDIR) -name libpthread.a)"
STDCXX_STATIC="$(find $(realpath $CURDIR) -name libstdc++.a)"
UTIL_STATIC="$(find $(realpath $CURDIR) -name libutil.a)"
TOOLCHAIN_BIN="$CURDIR/bin"
TOOLCHAIN_TARGET=$(echo $TOOLCHAIN_TARGET | sed -e 's/-$//')

symlinks  
set_and_save
show_user

if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ] ; then
  hash -r 2>&1 >/dev/null
fi