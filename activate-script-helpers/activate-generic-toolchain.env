# This software is released under the terms of GPLv2 by copyright@mzpqnxow.com
# Please see LICENSE or LICENSE.md for more information on GPLv2

#
# Use this as an activate script when working with a non-musl and non-openwrt
# toolchain. You may need to hack it a bit. It's up to you whether it is worth
# using. It works without modification on the Realtek SDK (rsdk) as well as a
# few other "proprietary" prebuilt toolchains. There will be hiccups depending
# on how the toolchains were prepared- for example, some toolchains have multiple
# versions of libraries for different ABIs and byte-orders. You will have to
# work this out yourself (it's not hard)
#

#
# This file should be placed in /path/to/installed/toolchain/
# Within this directory, you should have lib/ usr/ and other things
# as well as something named for the target, i.e. mips-linux-uclibc
# or sometimes, just mips-linux
#
# If this doesn't work for you, you either have it in the wrong directory
# or you have a very odd toolchain.
#
# You should probably call it activate, but it doesn't matter
# All you need to do is source it (from anywhere) and it sets your env up for
# building software via build systems like configure or just via gcc/g++/as/ld
# commands. It helps with static linking by setting some static library paths
# also (See the XXX_STATIC variables)
#
# It makes assumptions and will try to set things up for you so you can
# conveniently build things with or without ./configure based build systems
#

function sourced_file_path() {
  if [ -n "${BASH_SOURCE}" ]; then
    cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd
  elif [ -n "${ZSH_VERSION}" ]; then
    echo "$(dirname ${(%):-%x})"
  else
    return
  fi
}

CURDIR="$(sourced_file_path)"
TOOLCHAIN_TARGET="$(basename $(echo $CURDIR/*-linux*))"
TOOLCHAIN_ROOT="$CURDIR"

# Commonly used/needed static libraries, put them in the
# environment for easy access
UTIL_STATIC=$(find $(realpath $CURDIR) -name libutil.a)
C_STATIC=$(find $(realpath $CURDIR) -name libc.a)
DL_STATIC=$(find $(realpath $CURDIR) -name libdl.a)
PTHREAD_STATIC=$(find $(realpath $CURDIR) -name libpthread.a)
STDCXX_STATIC=$(find $(realpath $CURDIR) -name libstdc++.a)
GCCEH_STATIC=$(find $(realpath $CURDIR) -name libgcc_eh.a)

TOOLCHAIN_BIN="$TOOLCHAIN_ROOT/bin"

echo "--- Build environment setup ---"
echo
echo "TOOLCHAIN_TARGET: $TOOLCHAIN_TARGET"
echo "TOOLCHAIN_BIN: $TOOLCHAIN_BIN"
echo
for TOOL in gcc \
			addr2line \
			ar \
			as \
			c++ \
			cpp \
			g++ \
			ld \
			nm \
			objdump \
			ranlib \
			strip
do
    echo "  Symlinking $TOOL"
    ln -sf "$TOOLCHAIN_BIN/$TOOLCHAIN_TARGET-$TOOL" "$TOOLCHAIN_BIN/$TOOL"
done
ln -sf "${TOOLCHAIN_BIN}/${TOOLCHAIN_TARGET}-gcc" "${TOOLCHAIN_BIN}/cc"
echo
export PATH="$TOOLCHAIN_BIN":"$PATH"
echo "TOOLCHAIN_TARGET: 	$TOOLCHAIN_TARGET"
echo "TOOLCHAIN_ROOT:	$TOOLCHAIN_ROOT"
echo "TOOLCHAIN_BIN: 	$TOOLCHAIN_BIN"
echo
echo "GCC location: $(which gcc)"
echo "GAS location: $(which as)"
echo "GLD location: $(which ld)"
echo "G++ location: $(which g++)"
echo "CC location:  $(which cc)"
echo
echo "UTIL_STATIC:      $UTIL_STATIC"
echo "C_STATIC:         $C_STATIC"
echo "DL_STATIC:        $DL_STATIC"
echo "PTHREAD_STATIC:   $PTHREAD_STATIC"
echo "STDCXX_STATIC:    $STDCXX_STATIC"
echo "GCCEH_STATIC:     $GCCEH_STATIC"


alias cross_configure="./configure \
    --host=mips-sf-linux-musl \
    --prefix=/toolchains/mips-sf-sysv \
    CXXFLAGS=\"-fPIC -static -static-libstdc++ -static-libgcc\""

echo
echo "Use cross_configure to invoke alias for:"
echo "  $./configure --host=$TOOLCHAIN_TARGET --prefix=$TOOLCHAIN_ROOT"
echo
export UTIL_STATIC
export C_STATIC
export DL_STATIC
export PTHREAD_STATIC
export STDCXX_STATIC
export GCCEH_STATIC
export TOOLCHAIN_TARGET
export TOOLCHAIN_ROOT
export TOOLCHAIN_BIN
